library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;


entity codificador_binario is
generic(N: positive := 3;
			generateMSB: boolean := true;
			generateValid: boolean := true);
			
port(input: in std_logic_vector(2 ** N - 1 downto 0);
		output: out std_logic_vector(N - 1 downto 0);
		valid: out std_logic);
end entity;
	

architecture bhv of codificador_binario is
begin
	
	if0: if generateMSB generate
				process(input) is
				begin
					output <= (others => '0');
					for i in input'range loop
						if input(i) = '1' then
							output <= std_logic_vector(to_unsigned(i, output'length));
							exit;
						end if;
					end loop;
				end process;
			end generate;
	
	ValidInput: if generateValid generate
						valid <= '1' when input > 0 else
									'0';
					end generate;
end architecture;
